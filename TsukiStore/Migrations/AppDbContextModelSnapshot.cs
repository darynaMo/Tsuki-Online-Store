// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TsukiStore.Data;

namespace TsukiStore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TsukiStore.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProfilePictureURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Назва")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Опис")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("TsukiStore.Models.Brand_Product", b =>
                {
                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("BrandId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Brands_Products");
                });

            modelBuilder.Entity("TsukiStore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Вага")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Вид")
                        .HasColumnType("int");

                    b.Property<string>("Клас")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Назва")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Опис")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Ціна")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TsukiStore.Models.Brand_Product", b =>
                {
                    b.HasOne("TsukiStore.Models.Brand", "Бренд")
                        .WithMany("Бренд_Продукт")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TsukiStore.Models.Product", "Продукт")
                        .WithMany("Бренд_Продукт")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Бренд");

                    b.Navigation("Продукт");
                });

            modelBuilder.Entity("TsukiStore.Models.Brand", b =>
                {
                    b.Navigation("Бренд_Продукт");
                });

            modelBuilder.Entity("TsukiStore.Models.Product", b =>
                {
                    b.Navigation("Бренд_Продукт");
                });
#pragma warning restore 612, 618
        }
    }
}
